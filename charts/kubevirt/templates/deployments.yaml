---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kubevirt.io: virt-operator
  name: virt-operator
  namespace: {{.Values.kubevirt.namespace}}
spec:
  replicas: {{ .Values.kubevirt.virtOperator.replicas }}
  selector:
    matchLabels:
      kubevirt.io: virt-operator
  strategy:
    type: {{ .Values.kubevirt.virtOperator.strategy.type }}
  template:
    metadata:
      annotations:
        {{- toYaml .Values.kubevirt.virtOperator.annotations | nindent 8 }}
      labels:
        kubevirt.io: virt-operator
        name: virt-operator
        prometheus.kubevirt.io: "true"
      name: virt-operator
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: kubevirt.io
                      operator: In
                      values:
                        - virt-operator
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --port
            - {{ .Values.kubevirt.virtOperator.args.port | quote }}
            - -v
            - {{ .Values.kubevirt.virtOperator.args.verbosity | quote }}
          command:
            - virt-operator
          env:
            {{- toYaml .Values.kubevirt.virtOperator.env | nindent 12 }}
          image: {{ .Values.kubevirt.virtOperator.image.repository }}:{{ .Values.kubevirt.virtOperator.image.tag }}
          imagePullPolicy: {{ .Values.kubevirt.virtOperator.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 10
          name: virt-operator
          ports:
            - containerPort: 8443
              name: metrics
              protocol: TCP
            - containerPort: 8444
              name: webhooks
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.kubevirt.virtOperator.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/virt-operator/certificates
              name: kubevirt-operator-certs
              readOnly: true
            - mountPath: /profile-data
              name: profile-data
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: kubevirt-cluster-critical
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubevirt-operator
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      volumes:
        - name: kubevirt-operator-certs
          secret:
            optional: true
            secretName: kubevirt-operator-certs
        - emptyDir: {}
          name: profile-data
