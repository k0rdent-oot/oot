suite: Nutanix CAPX Provider Tests
templates:
  - templates/providertemplate-capx.yaml
  - templates/providerinterface-capx.yaml
  - templates/clusterclass-nutanix-k0s-hcp.yaml
  - templates/clusterclass-nutanix-k0s-standalone.yaml
  - templates/namespace-capx-system.yaml
  - templates/k0smotron-controlplane-template.yaml
  - templates/k0s-controlplane-template.yaml
  - templates/k0s-worker-bootstrap-templates.yaml
  - templates/nutanix-machine-templates.yaml
  - templates/nutanix-cluster.yaml

tests:
  - it: should create ProviderTemplate with correct metadata
    template: templates/providertemplate-capx.yaml
    asserts:
      - isKind:
          of: ProviderTemplate
      - equal:
          path: metadata.name
          value: cluster-api-provider-nutanix
      - equal:
          path: spec.providers[0].name
          value: nutanix
      - equal:
          path: spec.providers[0].type
          value: Infrastructure

  - it: should create ProviderInterface with correct GVKs
    template: templates/providerinterface-capx.yaml
    asserts:
      - isKind:
          of: ProviderInterface
      - equal:
          path: metadata.name
          value: cluster-api-provider-nutanix
      - contains:
          path: spec.clusterGVKs
          content:
            group: infrastructure.cluster.x-k8s.io
            version: v1beta1
            kind: NutanixCluster
      - contains:
          path: spec.exposedProviders
          content: nutanix

  - it: should create HCP ClusterClass when enabled
    template: templates/clusterclass-nutanix-k0s-hcp.yaml
    set:
      modes.hcp.enabled: true
    asserts:
      - isKind:
          of: ClusterClass
      - equal:
          path: apiVersion
          value: cluster.x-k8s.io/v1beta2
      - equal:
          path: metadata.name
          value: nutanix-k0s-hcp
      - equal:
          path: spec.controlPlane.templateRef.kind
          value: K0smotronControlPlaneTemplate
      - isNull:
          path: spec.controlPlane.machineInfrastructure

  - it: should not create HCP ClusterClass when disabled
    template: templates/clusterclass-nutanix-k0s-hcp.yaml
    set:
      modes.hcp.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should create Standalone ClusterClass when enabled
    template: templates/clusterclass-nutanix-k0s-standalone.yaml
    set:
      modes.standalone.enabled: true
    asserts:
      - isKind:
          of: ClusterClass
      - equal:
          path: apiVersion
          value: cluster.x-k8s.io/v1beta2
      - equal:
          path: metadata.name
          value: nutanix-k0s-standalone
      - equal:
          path: spec.controlPlane.templateRef.kind
          value: K0sControlPlaneTemplate
      - equal:
          path: spec.controlPlane.machineInfrastructure.templateRef.kind
          value: NutanixMachineTemplate

  - it: should not create Standalone ClusterClass when disabled
    template: templates/clusterclass-nutanix-k0s-standalone.yaml
    set:
      modes.standalone.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should create namespace with correct labels
    template: templates/namespace-capx-system.yaml
    asserts:
      - isKind:
          of: Namespace
      - equal:
          path: metadata.name
          value: capx-system
      - equal:
          path: metadata.labels["cluster.x-k8s.io/provider"]
          value: infrastructure-nutanix

  - it: should have required variables in HCP ClusterClass
    template: templates/clusterclass-nutanix-k0s-hcp.yaml
    set:
      modes.hcp.enabled: true
    asserts:
      - contains:
          path: spec.variables
          content:
            name: nutanixClusterConfig
            required: true
      - contains:
          path: spec.variables
          content:
            name: nutanixMachineConfig
            required: true
      - contains:
          path: spec.variables
          content:
            name: k0sConfig
            required: true

  - it: should have required variables in Standalone ClusterClass
    template: templates/clusterclass-nutanix-k0s-standalone.yaml
    set:
      modes.standalone.enabled: true
    asserts:
      - contains:
          path: spec.variables
          content:
            name: nutanixClusterConfig
            required: true
      - contains:
          path: spec.variables
          content:
            name: nutanixMachineConfig
            required: true
      - contains:
          path: spec.variables
          content:
            name: k0sConfig
            required: true

  - it: should use custom CAPX version
    template: templates/providertemplate-capx.yaml
    set:
      capx.version: v1.8.0
    asserts:
      - equal:
          path: spec.providers[0].version
          value: v1.8.0

  - it: should use custom namespace
    template: templates/namespace-capx-system.yaml
    set:
      capx.namespace: custom-capx-ns
    asserts:
      - equal:
          path: metadata.name
          value: custom-capx-ns

  - it: should create K0smotronControlPlaneTemplate in HCP mode
    template: templates/k0smotron-controlplane-template.yaml
    set:
      modes.hcp.enabled: true
    asserts:
      - isKind:
          of: K0smotronControlPlaneTemplate
      - equal:
          path: spec.template.spec.version
          value: v1.29.2+k0s.0

  - it: should create K0sControlPlaneTemplate in Standalone mode
    template: templates/k0s-controlplane-template.yaml
    set:
      modes.standalone.enabled: true
    asserts:
      - isKind:
          of: K0sControlPlaneTemplate
      - equal:
          path: spec.template.spec.version
          value: v1.29.2+k0s.0

  - it: should create NutanixCluster template
    template: templates/nutanix-cluster.yaml
    set:
      modes.hcp.enabled: true
      nutanix.prismCentral.address: "10.1.1.100"
      nutanix.controlPlaneEndpoint.host: "10.1.1.200"
    asserts:
      - isKind:
          of: NutanixCluster
      - equal:
          path: spec.prismCentral.address
          value: "10.1.1.100"
      - equal:
          path: spec.controlPlaneEndpoint.host
          value: "10.1.1.200"

  - it: should create NutanixMachineTemplate for workers in HCP mode
    template: templates/nutanix-machine-templates.yaml
    set:
      modes.hcp.enabled: true
      machineDefaults.image.name: "test-image"
      machineDefaults.cluster.name: "test-cluster"
      machineDefaults.subnets[0].name: "test-subnet"
    asserts:
      - isKind:
          of: NutanixMachineTemplate
      - equal:
          path: spec.template.spec.image.name
          value: "test-image"

  - it: should create K0sWorkerConfigTemplate in HCP mode
    template: templates/k0s-worker-bootstrap-templates.yaml
    set:
      modes.hcp.enabled: true
    asserts:
      - isKind:
          of: K0sWorkerConfigTemplate
      - equal:
          path: spec.template.spec.version
          value: v1.29.2+k0s.0
