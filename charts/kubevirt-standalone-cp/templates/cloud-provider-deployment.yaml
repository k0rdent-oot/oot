apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kubevirt-cloud-controller-manager-{{ .Release.Name }}
  name: kubevirt-cloud-controller-manager-{{ .Release.Name }}
  namespace: {{ .Values.cluster.namespace | default .Release.Namespace | trunc 63 }}
spec:
  replicas: {{ .Values.cloudControllerManager.replicas }}
  selector:
    matchLabels:
      k8s-app: kubevirt-cloud-controller-manager-{{ .Release.Name }}
  template:
    metadata:
      labels:
        k8s-app: kubevirt-cloud-controller-manager-{{ .Release.Name }}
    spec:
      containers:
      - args:
        - --cloud-provider=kubevirt
        - --cloud-config=/etc/cloud/cloud-config
        - --kubeconfig=/etc/kubernetes/kubeconfig/value
        - --authentication-skip-lookup=true
        - --cluster-name={{ .Release.Name }}
        command:
        - /bin/kubevirt-cloud-controller-manager
        image: {{ .Values.cloudControllerManager.repo }}/{{ .Values.cloudControllerManager.name }}:{{ .Values.cloudControllerManager.tag }}
        imagePullPolicy: Always
        name: kubevirt-cloud-controller-manager
        resources:
          requests:
            cpu: 100m
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/kubernetes/kubeconfig
          name: kubeconfig
          readOnly: true
        - mountPath: /etc/cloud
          name: cloud-config
          readOnly: true
      serviceAccountName: cloud-controller-manager-{{ .Release.Name }}
      {{- if .Values.cloudControllerManager.topologySpreadConstraints }}
      topologySpreadConstraints: {{ tpl (toYaml .Values.cloudControllerManager.topologySpreadConstraints) $ | nindent 6 }}
      {{- end }}
      tolerations:
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - configMap:
          name: cloud-config-{{ .Release.Name }}
        name: cloud-config
      - name: kubeconfig
        secret:
          secretName: {{ .Release.Name }}-kubeconfig