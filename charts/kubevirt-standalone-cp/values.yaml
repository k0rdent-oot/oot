# @schema title: KubeVirt Cluster Configuration
# @schema description: Configuration for KubeVirt based Kubernetes cluster

# Cluster parameters
controlPlaneNumber: 1 # @schema description: The number of the control plane nodes; type: number; minimum: 1
workersNumber: 1 # @schema description: The number of the worker nodes; type: number; minimum: 1

clusterIdentity: # @schema description: The KubeVirt Service Account credentials secret reference, auto-populated; type: object
  name: "" # @schema description: The KubeVirt Service Account credentials secret name, auto-populated; type: string

cluster: {} # @schema description: Basic cluster information; type: object
 # kubeConfigSecretRef: "kubevirt-config" # @schema description: The name of the secret containing KubeVirt kubeconfig; type: string
 # name: "" # @schema description: The name of the cluster; type: string
 # namespace: "default" # @schema description: The namespace where cluster resources will be created; type: string

clusterNetwork: # @schema description: The cluster network configuration; type: object
  pods: # @schema description: The network ranges from which Pod networks are allocated; type: object
    cidrBlocks: # @schema description: A list of CIDR blocks; type: array; items: string
      - "10.243.0.0/16"
  services: # @schema description: The network ranges from which service VIPs are allocated; type: object
    cidrBlocks: # @schema description: A list of CIDR blocks; type: array; items: string
      - "10.95.0.0/16"

clusterLabels: {} # @schema description: Labels to apply to the cluster; type: object; additionalProperties: true
clusterAnnotations: {} # @schema description: Annotations to apply to the cluster; type: object; additionalProperties: true

# KubeVirt machines parameters
controlPlane: # @schema description: Control plane parameters; type: object
  runStrategy: Always
  cpus: 2 # @schema description: Number of CPUs allocated to control plane nodes; type: integer; minimum: 1
  memory: "4Gi" # @schema description: Memory allocated to control plane nodes; type: string
  bootstrapCheckStrategy: none # @schema description: Strategy for bootstrap checks; type: string; enum: [none, ssh]
  image: ghcr.io/k0rdent-oot/kubevirt-container-disk:debian-latest # @schema description: Container disk image for control plane nodes; type: string
  additionalNetworkInterfaces: []
  #  - name: bridge-net
  #    multus:
  #      networkName: bridge-1560
  dataVolumes: []
  #  - name: root
  #    accessModes: ReadWriteMany
  #    storage: 50Gi
  #    volumeMode: Block
  #    storageClassName: block-pool
  #    source:
  #      snapshot:
  #        namespace: kcm-system
  #        name: goldenimage-ubuntu2204
  #  - name: data
  #    accessModes: ReadWriteMany
  #    storage: 1Gi
  #    volumeMode: Block
  #    storageClassName: block-pool
  #    source:
  #      blank: {}
  files: []
  #  - content: |
  #        12345
  #        67896
  #        10111
  #    permissions: "0644"
  #    path: /etc/k0s/test.yaml
  preStartCommands: # @schema description: Commands to run before starting K0s service; type: array; items: string
    - apt update
    - env DEBIAN_FRONTEND=noninteractive apt -y install qemu-guest-agent
    - systemctl enable --now qemu-guest-agent

worker: # @schema description: Worker parameters; type: object
  runStrategy: Once
  cpus: 2 # @schema description: Number of CPUs allocated to worker nodes; type: integer; minimum: 1
  memory: "4Gi" # @schema description: Memory allocated to worker nodes; type: string
  bootstrapCheckStrategy: none # @schema description: Strategy for bootstrap checks; type: string; enum: [none, ssh]
  image: ghcr.io/k0rdent-oot/kubevirt-container-disk:debian-latest # @schema description: Container disk image for worker nodes; type: string
  additionalNetworkInterfaces: []
  #  - name: bridge-net
  #    multus:
  #      networkName: bridge-1560
  dataVolumes: []
  #  - name: root
  #    accessModes: ReadWriteMany
  #    storage: 50Gi
  #    volumeMode: Block
  #    storageClassName: block-pool
  #    source:
  #      snapshot:
  #        namespace: kcm-system
  #        name: goldenimage-ubuntu2204
  #  - name: data
  #    accessModes: ReadWriteMany
  #    storage: 1Gi
  #    volumeMode: Block
  #    storageClassName: block-pool
  #    source:
  #      blank: {}
  files: []
  #  - content: |
  #        12345
  #        67896
  #        10111
  #    permissions: "0644"
  #    path: /etc/k0s/test.yaml
  preStartCommands: # @schema description: Commands to run before starting K0s service; type: array; items: string
    - apt update
    - env DEBIAN_FRONTEND=noninteractive apt -y install qemu-guest-agent
    - systemctl enable --now qemu-guest-agent

# K0s parameters
k0s: # @schema description: K0s parameters; type: object
  version: v1.32.5+k0s.1 # @schema description: K0s version; type: string
  api: # @schema description: Kubernetes API server parameters; type: object; additionalProperties: object
    extraArgs: {} # @schema description: Map of key-values (strings) for any extra arguments to pass down to Kubernetes api-server process; type: object; additionalProperties: true
  network: # @schema description: Network configuration for K0s; type: object
    vxlanPort: 6789 # @schema description: Port to use for VXLAN tunnels; type: number; minimum: 1; maximum: 65535

cloudControllerManager:
  replicas: 1
  repo: quay.io/kubevirt
  name: kubevirt-cloud-controller-manager
  tag: v0.5.1
  topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kubevirt-cloud-controller-manager-{{ .Release.Name }}
      matchLabelKeys:
        - pod-template-hash
      topologyKey: topology.kubernetes.io/zone
      maxSkew: 1
      whenUnsatisfiable: ScheduleAnyway

kubevirtCsiDriver:
  replicas: 1
  infraStorageClassName: "standard" # change with storage class of Mothership
  csiDriver:
    repo: quay.io/kubevirt
    name: kubevirt-csi-driver
    tag: latest
  csiProvisioner:
    repo: k8s.gcr.io/sig-storage
    name: csi-provisioner
    tag: v5.1.0
  csiAttacher:
    repo: k8s.gcr.io/sig-storage
    name: csi-attacher
    tag: v4.4.3
  csiLivenessProbe:
    repo: k8s.gcr.io/sig-storage
    name: livenessprobe
    tag: v2.12.0
  csiSnapshotter:
    repo: k8s.gcr.io/sig-storage
    name: csi-snapshotter
    tag: v7.0.2
  csiResizer:
    repo: k8s.gcr.io/sig-storage
    name: csi-resizer
    tag: v1.13.1
  nodeSelector:
    node-role.kubernetes.io/control-plane: "true"
  topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kubevirt-csi-driver-{{ .Release.Name }}
      matchLabelKeys:
        - pod-template-hash
      topologyKey: topology.kubernetes.io/zone
      maxSkew: 1
      whenUnsatisfiable: ScheduleAnyway

machineHealthCheck:
  enabled: false
  maxUnhealthy: 40%
