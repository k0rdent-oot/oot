name: Helm Lint

on:
  pull_request:
    paths:
      - 'charts/**'
  push:
    branches:
      - main
    paths:
      - 'charts/**'

jobs:
  discover-charts:
    runs-on: ubuntu-latest
    outputs:
      charts: ${{ steps.find-charts.outputs.charts }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find Helm charts
        id: find-charts
        run: |
          charts=$(find charts -maxdepth 2 -name Chart.yaml -type f | sed 's|/Chart.yaml||' | sed 's|charts/||' | sort | jq -R -s -c 'split("\n")[:-1]')
          echo "charts=$charts" >> $GITHUB_OUTPUT
          echo "Found charts: $charts"

  helm-lint:
    runs-on: ubuntu-latest
    needs: discover-charts
    if: needs.discover-charts.outputs.charts != '[]'
    strategy:
      matrix:
        chart: ${{ fromJson(needs.discover-charts.outputs.charts) }}
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Update chart dependencies
        run: |
          echo "Updating dependencies for chart: ${{ matrix.chart }}"
          cd charts/${{ matrix.chart }}
          if [ -f Chart.yaml ] && grep -q "dependencies:" Chart.yaml; then
            helm dependency update
          fi
          cd ../..

      - name: Lint Helm chart
        run: |
          echo "Linting chart: ${{ matrix.chart }}"
          helm lint charts/${{ matrix.chart }}

      - name: Validate chart templates
        run: |
          echo "Validating templates for chart: ${{ matrix.chart }}"
          cd charts/${{ matrix.chart }}
          if [ -f Chart.yaml ] && grep -q "dependencies:" Chart.yaml; then
            helm template . --debug --dry-run > /dev/null
          else
            helm template . --debug --dry-run > /dev/null
          fi
          cd ../..

  summary:
    runs-on: ubuntu-latest
    needs: [discover-charts, helm-lint]
    if: always() && needs.discover-charts.outputs.charts != '[]'
    steps:
      - name: Summary
        run: |
          if [[ "${{ needs.helm-lint.result }}" == "success" ]]; then
            echo "✅ All Helm charts passed linting successfully"
          else
            echo "❌ Some Helm charts failed linting"
            exit 1
          fi